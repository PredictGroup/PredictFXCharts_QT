<HTML>
<HEAD>
<Title>ArrayMath.lowess</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1"><a href="ArrayMath.htm">ArrayMath</a>.lowess</p>
<hr class="separator">
<p class="heading2a">Usage</p>
<div class="content">
ArrayMath& lowess(double smoothness = 0.25, int iteration = 0);
</div>
<p class="heading2">Description</p>
<div class="content">
Fits a curve through the data points in the ArrayMath object using the LOWESS algorithm.<br><br>
The full name of LOWESS is "Robust locally weighted regression and smoothing scatterplots". It is a commonly used algorithm for drawing a smooth curve through a number of points.<br><br>
LOWESS works by assuming a small segment of any curve can be approximated by a straight line. For each data point, LOWESS finds the n nearest points to that data point (n is configurable), and performs weighted linear regression using a tricube weighting function. It then adjust the coordinates of the data point based on the result of the weighted linear regression.<br><br>
LOWESS can run in multiple iterations, in which case it should converge to a stable curve - thus it is called "robust".<br><br>
In most cases, LOWESS behaves better than many other smoothing algorithms, such as moving average, moving median, exponential average. Curves draw using LOWESS look smoother, yet they track the data points better. Also, LOWESS behaves well at the end points. On the other hand, methods based on moving windows (e.g. moving averages) do not work on the first few data points, because they need sufficient data points to fill the moving window first.<br><br>
In this method, each element of the ArrayMath object will be replaced by the corresponding value computed using the LOWESS algorithm.
</div>
<p class="heading2">Arguments</p>
<div class="content">
<table border="1" cellpadding="5" cellspacing="0" width="98%"> 
<tr>
<th width="19%">Argument</th><th width="19%">Default</th><th width="60%">Description</th>
</tr>
<tr>
<td>smoothness</td><td>0.25</td><td>The smoothness factor. It must be between 0 - 1. It is the portion of points used in finding the n nearest points. In other words, n = smoothness * no_of_points. A larger value will result in a smoother the curve. A smaller value will result in the curve tracking the data points better.<br><br>
For LOWESS to have any smoothing effect at all, n must be at least 3. You may need to use a large smoothness factor if you only have a few data points.</td></tr><tr><td>iteration</td><td>0</td><td>The number of additional iteration used in the LOWESS algorithm. Unless your data is extremely noisy, in most case no additional iteration is necessary.</td>
</tr>
</table>
</div>
<p class="heading2">Return Value</p>
<div class="content">
The current ArrayMath object.
</div>
<br><hr class="separator">
<div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
