<HTML>
<HEAD>
<Title>Programmable Track Cursor (QT)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">
<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Programmable Track Cursor (QT)</p>
<hr class="separator">
<div class="content"><div style="background-color:#cccccc;width:99%;padding:10px">
<b><font color="#FF0000">NOTE:</font></b> This section describes Programmable Track Cursor for QT only. For MFC, please refer to <a href="trackcursorwin.htm">Programmable Track Cursor (MFC)</a>.
</div><br>
</div><p class="heading1a">Introduction</p><div class="content">
For desktop applications, ChartDirector Programmable Track Cursor is implemented by drawing the track cursor on a "dynamic layer" of the chart. For example, drawing a horizontal line and a vertical line will create a crosshair cursor. The drawing is typically performed in a     <a href="QChartViewer.mouseMovePlotArea.htm">QChartViewer.mouseMovePlotArea</a> signal        handler so that the track cursor follows the mouse cursor. It is also possible to draw the track cursor at other times. For example, one may program the track cursor so that it is movable by arrow keys. In a realtime chart, the track cursor can be programmed to sweep through the chart as new data points are added.
</div><p class="heading1a">MouseMovePlotArea Signal</p><div class="content">
By far the most common usage of track cursor is when the mouse is moving over the plot area of an <a href="XYChart.htm">XYChart</a>. The     <a href="QChartViewer.mouseMovePlotArea.htm">QChartViewer.mouseMovePlotArea</a> signal       , which occurs when the mouse moves over the plot area, is specially designed to facilitate track cursor implementation.<br><br>
A special feature of MouseMovePlotArea is that it occurs even if the mouse is slightly outside the plot area, in which case <a href="QChartViewer.getPlotAreaMouseX.htm">QChartViewer.getPlotAreaMouseX</a> and <a href="QChartViewer.getPlotAreaMouseY.htm">QChartViewer.getPlotAreaMouseY</a> will report as if the mouse is still on the edge of the plot area. This feature allows the user to easily position the track cursor on the edge of the plot area, at which the latest data points are often located. The margin around the plot area that would still trigger MouseMovePlotArea is configurable using <a href="QChartViewer.setPlotAreaMouseMargin.htm">QChartViewer.setPlotAreaMouseMargin</a>.
</div><p class="heading1a">Dynamic Layer</p><div class="content">
The "dynamic layer" can be imagined as a special layer on top of the chart for drawing updatable contents. The <a href="BaseChart.initDynamicLayer.htm">BaseChart.initDynamicLayer</a> method creates the dynamic layer, or clears the dynamic layer if it has already been created. This method returns a <a href="DrawArea.htm">DrawArea</a> object for drawing lines, shapes and text on the dynamic layer.<br><br>
In typical usage, the track cursor drawing code would use initDynamicLayer to get the DrawArea object for the dynamic layer, and use the DrawArea object to draw the track cursor. After the drawing is completed, <a href="QChartViewer.updateDisplay.htm">QChartViewer.updateDisplay</a> should be used to commit the drawing to the display. If the track cursor drawing code is called from the     <a href="QChartViewer.mouseMovePlotArea.htm">QChartViewer.mouseMovePlotArea</a> signal        handler, the crosshair will appear to follow the mouse.<br><br>
In some track cursor style, the track cursor should be removed when the mouse leaves the plot area. One way to perform this is to use <a href="BaseChart.removeDynamicLayer.htm">BaseChart.removeDynamicLayer</a> in the     <a href="QChartViewer.mouseLeavePlotArea.htm">QChartViewer.mouseLeavePlotArea</a> signal        handler to remove the dynamic layer. A more convenient method is to use <a href="QChartViewer.removeDynamicLayer.htm">QChartViewer.removeDynamicLayer</a> to automatically remove the dynamic layer when the mouse leaves the plot area, which avoids the need to set up an extra event handler.
</div><p class="heading1a">Snapping to the Nearest X Data Position</p><div class="content">
Very often, the track cursor is not drawn exactly at the mouse cursor position, but is drawn at the data point position nearest to the mouse cursor in the x direction. ChartDirector includes a method <a href="XYChart.getNearestXValue.htm">XYChart.getNearestXValue</a>, which will search all data in the chart to get the x data value nearest to a given point. This value can then be used to obtain the x pixel coordinate (using <a href="XYChart.getXCoor.htm">XYChart.getXCoor</a>) for drawing the track cursor. It can also be used to look up the data points (using <a href="Layer.getXIndexOf.htm">Layer.getXIndexOf</a>) so as to draw dots that track the data points, generate dynamic data labels, axis labels or legend entries.
</div><p class="heading1a">Sample Track Cursors</p><div class="content">
ChartDirector includes a number of sample drawing routines in its sample code as follows:<br><br>
<table width="98%" border="1" cellpadding="5" cellspacing="0"> <tr><th width="33%">Sample Code<th width="65%">Description
<tr><td><a href="tracklegendqt.htm">Track Line with Legend (QT)</a><td>Demonstrates a track cursor that consists of a vertical line snapped to the nearest x data position. There are dots to highlight the nearest data points, and a dynamically updated legend showing their values.
<tr><td><a href="tracklabelqt.htm">Track Line with Data Labels (QT)</a><td>Demonstrates a track cursor that consists of a vertical line snapped to the nearest x data position with a floating x-axis label. There are also dots to highlight the nearest data points, with labels beside them displaying their values.
<tr><td><a href="trackaxisqt.htm">Track Line with Axis Labels (QT)</a><td>Demonstrates a track cursor that uses horizontal and vertical lines to connect the nearest data points to the x-axis and y-axis, with floating axis labels showing their values.
<tr><td><a href="trackboxqt.htm">Track Box with Floating Legend (QT)</a><td>Demonstrates a track cursor that consists of a rectangle enclosing the slot corresponding to the nearest x-axis label. A floating legend box that moves with the mouse cursor is used to display the data values in that slot.
<tr><td><a href="crosshairqt.htm">Crosshair with Axis Labels (QT)</a><td>Demonstrates a track cursor that consists of a vertical line and a horizontal line at the mouse cursor position, thereby forming a crosshair. Floating axis labels are used to display the cursor position.
<tr><td><a href="trackfinanceqt.htm">Finance Chart Track Line (QT)</a><td>This is similar to <a href="tracklegendqt.htm">Track Line with Legend (QT)</a>, but is modified to apply to the <a href="FinanceChart.htm">FinanceChart</a> object.
<tr><td><a href="zoomscrolltrackqt.htm">Zooming and Scrolling with Track Line (1) (QT)</a><td>Demonstrates how to apply track cursors to a Zoomable and Scrollable chart. The track cursor drawing code is similar to that in <a href="tracklegendqt.htm">Track Line with Legend (QT)</a>.
<tr><td><a href="zoomscrolltrack2qt.htm">Zooming and Scrolling with Track Line (2) (QT)</a><td>Demonstrates how to apply track cursors to a Zoomable and Scrollable chart. The track cursor drawing code is similar to that in <a href="tracklabelqt.htm">Track Line with Data Labels (QT)</a>.
<tr><td><a href="viewportcontroldemoqt.htm">Zooming and Scrolling with Viewport Control (QT)</a><td>Demonstrates how to apply track cursors to a Zoomable and Scrollable chart. The track cursor drawing code is similar to that in <a href="tracklegendqt.htm">Track Line with Legend (QT)</a>.
<tr><td><a href="xyzoomscrollqt.htm">XY Zooming and Scrolling (QT)</a><td>Demonstrates how to apply track cursors to a Zoomable and Scrollable chart. The track cursor drawing code is similar to that in <a href="crosshairqt.htm">Crosshair with Axis Labels (QT)</a>.
<tr><td><a href="realtimetrackqt.htm">Realtime Chart with Track Line (QT)</a><td>Demonstrates how to apply track cursors to a Realtime chart. The track cursor drawing code is similar to that in <a href="tracklegendqt.htm">Track Line with Legend (QT)</a>.
<tr><td><a href="realtimezoomscrollqt.htm">Realtime Chart with Zooming and Scrolling (QT)</a><td>Demonstrates how to apply track cursors to a Realtime chart. The track cursor drawing code is similar to that in <a href="tracklabelqt.htm">Track Line with Data Labels (QT)</a>.
</table><br>
Note that the above are only examples demonstrating the ChartDirector features for drawing track cursors. You may reuse them, or modify them for your own needs. You may also develop your own track cursor drawing code to implement the track cursor behaviour you want.</div><br>
<hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div></body>
</HTML>
