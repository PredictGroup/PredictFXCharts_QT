<HTML>
<HEAD>
<Title>QChartViewer.mouseMoveChart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1"><a href="QChartViewer.htm">QChartViewer</a>.mouseMoveChart</p>
<hr class="separator">
<p class="heading2a">Declaration</p>
<div class="content">
void mouseMoveChart(QMouseEvent *event);
</div>
<p class="heading2">Description</p>

<div class="content">
This signal will be emitted when the mouse moves over the QChartViewer widget. Unlike the mouseMove signal, QChartViewer may delay a mouseMoveChart signal and combine multiple signals into one signal to improve GUI responsiveness.<br><br>
When a mouse moves over a widget, mouse move signals can be emitted very rapidly. If the time required to process a mouse move signal exceeds the time between mouse move signals (which is possible if a chart is updated during mouse move), then after processing one mouse move signal, there is already another mouse move signal pending. In many operating systems, mouse signals have priority over other signals. This means the system would need to continuously process mouse move signals but not other signals. As a result, the display may not get updated and the GUI would appear not responsive.<br><br>
To address the above issue, when QChartViewer detected that there is another mouseMoveChart signal pending immediately after processing one mouseMoveChart signal, it will delay processing it to allow other signals to get processed. This ensures the GUI remain smooth and responsive.<br><br>
When handling this event, <a href="CChartViewer.getChartMouseX.htm">CChartViewer.getChartMouseX</a>, <a href="CChartViewer.getChartMouseY.htm">CChartViewer.getChartMouseY</a>, <a href="CChartViewer.getPlotAreaMouseX.htm">CChartViewer.getPlotAreaMouseX</a> and <a href="CChartViewer.getChartMouseY.htm">CChartViewer.getChartMouseY</a> can be used to obtain the mouse cursor position in the chart pixel coordinate system.
</div>
<br><hr class="separator">
<div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
