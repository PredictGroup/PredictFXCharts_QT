<HTML>
<HEAD>
<Title>Confidence Band</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Confidence Band</p>
<hr class="separator">
<div class="content">
<img src="images/confidenceband.png">
<br><br>
This example demonstrates adding confidence bands to a trend line. It also demonstrates how to display linear regression parameters on the chart.<br><br>
In linear regression, the data points are assumed to be related by:<br><br>
<div style="margin-left:25;font-family:courier new,courier"> y = m * x + c + err </div><br>
where m and c are constants, and err is a random variable. Linear regression estimates m, c and err based on available data.<br><br>
As m and c are estimated values, the trend line y = m * x + c may be inaccurate. In ChartDirector, the uncertainties can be represented as a confidence band using <a href="TrendLayer.addConfidenceBand.htm">TrendLayer.addConfidenceBand</a>. For example, the 95% confidence band means there are 95% probability that the "real" trend line is in that band.<br><br>
To predict a data point (infer y given x), we use y = m * x + c + err. As m, c and err are estimated values, the predicted data point may be inaccurate. In ChartDirector, the uncertainties can be represented as a prediction band using <a href="TrendLayer.addPredictionBand.htm">TrendLayer.addPredictionBand</a>.<br><br>
Note that the prediction band is always wider than the confidence band because of the extra uncertainties contributed by the err term.<br><br>
In ChartDirector, the linear regression parameters slope, intercept, correlation coefficient and standard error can be obtained by using <a href="TrendLayer.getSlope.htm">TrendLayer.getSlope</a>, <a href="TrendLayer.getIntercept.htm">TrendLayer.getIntercept</a>, <a href="TrendLayer.getCorrelation.htm">TrendLayer.getCorrelation</a> and <a href="TrendLayer.getStdError.htm">TrendLayer.getStdError</a>. (Please refer to appropriate statistics text books for explanation of these values.)<br><br>
In this example, the linear regression parameters are formatted into a table using <a href="cdml.htm">CDML</a>, which is then added to the chart as custom text box using <a href="BaseChart.addText.htm">BaseChart.addText</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/confidenceband". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"
#include &lt;stdio.h&gt;

int main(int argc, char *argv[])
{
    char buffer[256];

    // The XY data of the first data series
    double dataX[] = {50, 55, 37, 24, 42, 49, 63, 72, 83, 59};
    double dataY[] = {3.6, 2.8, 2.5, 2.3, 3.8, 3.0, 3.8, 5.0, 6.0, 3.3};

    // Create a XYChart object of size 450 x 420 pixels
    XYChart *c = new XYChart(450, 420);

    // Set the plotarea at (55, 65) and of size 350 x 300 pixels, with white background and a light
    // grey border (0xc0c0c0). Turn on both horizontal and vertical grid lines with light grey color
    // (0xc0c0c0)
    c-&gt;setPlotArea(55, 65, 350, 300, 0xffffff, -1, 0xc0c0c0, 0xc0c0c0, -1);

    // Add a title to the chart using 18 point Times Bold Itatic font.
    c-&gt;addTitle("Server Performance", "timesbi.ttf", 18);

    // Add titles to the axes using 12pt Arial Bold Italic font
    c-&gt;yAxis()-&gt;setTitle("Response Time (sec)", "arialbi.ttf", 12);
    c-&gt;xAxis()-&gt;setTitle("Server Load (TPS)", "arialbi.ttf", 12);

    // Set the axes line width to 3 pixels
    c-&gt;yAxis()-&gt;setWidth(3);
    c-&gt;xAxis()-&gt;setWidth(3);

    // Add a scatter layer using (dataX, dataY)
    c-&gt;addScatterLayer(DoubleArray(dataX, (int)(sizeof(dataX) / sizeof(dataX[0]))), DoubleArray(
        dataY, (int)(sizeof(dataY) / sizeof(dataY[0]))), "", Chart::DiamondSymbol, 11, 0x008000);

    // Add a trend line layer for (dataX, dataY)
    TrendLayer *trendLayer = c-&gt;addTrendLayer(DoubleArray(dataX, (int)(sizeof(dataX) / sizeof(dataX[
        0]))), DoubleArray(dataY, (int)(sizeof(dataY) / sizeof(dataY[0]))), 0x008000);

    // Set the line width to 3 pixels
    trendLayer-&gt;setLineWidth(3);

    // Add a 95% confidence band for the line
    trendLayer-&gt;addConfidenceBand(0.95, 0x806666ff);

    // Add a 95% confidence band (prediction band) for the points
    trendLayer-&gt;addPredictionBand(0.95, 0x8066ff66);

    // Add a legend box at (50, 30) (top of the chart) with horizontal layout. Use 10pt Arial Bold
    // Italic font. Set the background and border color to Transparent.
    LegendBox *legendBox = c-&gt;addLegend(50, 30, false, "arialbi.ttf", 10);
    legendBox-&gt;setBackground(Chart::Transparent);

    // Add entries to the legend box
    legendBox-&gt;addKey("95% Line Confidence", 0x806666ff);
    legendBox-&gt;addKey("95% Point Confidence", 0x8066ff66);

    // Display the trend line parameters as a text table formatted using CDML
    sprintf(buffer,
        "&lt;*block*&gt;Slope\nIntercept\nCorrelation\nStd Error&lt;*/*&gt;   &lt;*block*&gt;%.4f sec/tps\n%.4f sec\n"
        "%.4f\n%.4f sec&lt;*/*&gt;", trendLayer-&gt;getSlope(), trendLayer-&gt;getIntercept(),
        trendLayer-&gt;getCorrelation(), trendLayer-&gt;getStdError());
    TextBox *textbox = c-&gt;addText(56, 65, buffer, "arialbd.ttf", 8);

    // Set the background of the text box to light grey, with a black border, and 1 pixel 3D border
    textbox-&gt;setBackground(0xc0c0c0, 0, 1);

    // Output the chart
    c-&gt;makeChart("confidenceband.png");

    //free up resources
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
