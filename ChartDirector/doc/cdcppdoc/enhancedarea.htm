<HTML>
<HEAD>
<Title>Enhanced Area Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Enhanced Area Chart</p>
<hr class="separator">
<div class="content">
<img src="images/enhancedarea.jpg">
<br><br>
This example extends the <a href="simplearea.htm">Simple Area Chart</a> example by decorating the chart using a number of chart formatting features.<br><br>
<ul><li> The brushed silver background is achieved by using <a href="Chart.brushedSilverColor.htm">Chart::brushedSilverColor</a> to create the brushed silver color, then use it in <a href="XYChart.XYChart.htm">XYChart.XYChart</a> as the chart background color.<br><br>
<li> The rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>.<br><br>
<li> The soft drop shadow is configured using <a href="BaseChart.setDropShadow.htm">BaseChart.setDropShadow</a>.<br><br>
<li> Add a title to the chart using <a href="BaseChart.addTitle.htm">BaseChart.addTitle</a>. The title text is represented using <a href="cdml.htm">CDML</a> to include star icons in the text.<br><br>
<li> Add a transparent box using <a href="BaseChart.addText.htm">BaseChart.addText</a> and <a href="Box.setSize.htm">Box.setSize</a>, with a depressed 3D border configured with <a href="Box.setBackground.htm">Box.setBackground</a> and rounded corners configured with <a href="Box.setRoundedCorners.htm">Box.setRoundedCorners</a>. The box is for decorative purpose and acts as the border for the chart contents excluding the title.<br><br>
<li> Set the background, border and grid colors of the plot area using <a href="XYChart.setPlotArea.htm">XYChart.setPlotArea</a>.<br><br>
<li> Add titles to the axes using <a href="Axis.setTitle.htm">Axis.setTitle</a>.<br><br>
<li> Set the axis widths using <a href="Axis.setWidth.htm">Axis.setWidth</a>.<br><br>
<li> Use a semi-transparent gradient color as the area color. The gradient color is created using <a href="BaseChart.linearGradientColor.htm">BaseChart.linearGradientColor</a>.<br><br>
<li> Add a logo at the bottom right corner of the plot area as custom text using <a href="BaseChart.addText.htm">BaseChart.addText</a> with <a href="Chart.BottomRight.htm">BottomRight</a> alignment. The logo includes images and text encoded using <a href="cdml.htm">CDML</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/enhancedarea". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

int main(int argc, char *argv[])
{
    // The data for the area chart
    double data[] = {30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60, 55, 53, 35, 50, 66,
        56, 48, 52, 65, 62};

    // The labels for the area chart
    const char *labels[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
        "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"};

    // Create a XYChart object of size 600 x 360 pixels, with a brushed silver background, 1 pixel
    // 3D border effect, rounded corners and soft drop shadow.
    XYChart *c = new XYChart(600, 360, Chart::brushedSilverColor(), Chart::Transparent, 1);
    c-&gt;setRoundedFrame();
    c-&gt;setDropShadow();

    // Add a title box to the chart using 18pt Times Bold Italic font.
    TextBox *title = c-&gt;addTitle(
        "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Performance Enhancer "
        "&lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "timesbi.ttf", 18);

    //
    // Use a text box with a depressed 3D border to create the inner depressed region
    //

    // The width of the frame border
    int frameWidth = 5;

    // Set the depressed region position
    TextBox *contentBox = c-&gt;addText(frameWidth, title-&gt;getHeight(), "");
    contentBox-&gt;setSize(c-&gt;getDrawArea()-&gt;getWidth() - 1 - frameWidth * 2, c-&gt;getDrawArea(
        )-&gt;getHeight() - title-&gt;getHeight() - frameWidth - 1);

    // Use -1 as the rasied effect to create a depressed region
    contentBox-&gt;setBackground(Chart::Transparent, Chart::Transparent, -1);

    // Set rounded corners, and put the text box at the back of the chart
    contentBox-&gt;setRoundedCorners(10);
    contentBox-&gt;setZOrder(Chart::ChartBackZ);

    // Tentatively set the plotarea to 50 pixels from the left depressed edge, and 25 pixels under
    // the top depressed edge. Set the width to 75 pixels less than the depressed region width, and
    // the height to 75 pixels less than the depressed region height. Use white (ffffff) background,
    // transparent border, and grey (cccccc) horizontal and vertical grid lines.
    PlotArea *plotArea = c-&gt;setPlotArea(50 + contentBox-&gt;getLeftX(), contentBox-&gt;getTopY() + 25,
        contentBox-&gt;getWidth() - 75, contentBox-&gt;getHeight() - 75, 0xffffff, -1, -1, 0xcccccc, -1);

    // Add a title to the y axis
    c-&gt;yAxis()-&gt;setTitle("Energy Concentration (KJ per liter)");

    // Set the labels on the x axis.
    c-&gt;xAxis()-&gt;setLabels(StringArray(labels, (int)(sizeof(labels) / sizeof(labels[0]))));

    // Display 1 out of 3 labels on the x-axis.
    c-&gt;xAxis()-&gt;setLabelStep(3);

    // Add a title to the x axis using CDML
    c-&gt;xAxis()-&gt;setTitle("&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;");

    // Set the axes width to 2 pixels
    c-&gt;xAxis()-&gt;setWidth(2);
    c-&gt;yAxis()-&gt;setWidth(2);

    // Add an area layer to the chart using a gradient color that changes vertically from
    // semi-transparent red (60ff0000) to semi-transparent white (60ffffff)
    c-&gt;addAreaLayer(DoubleArray(data, (int)(sizeof(data) / sizeof(data[0]))),
        c-&gt;linearGradientColor(0, contentBox-&gt;getTopY() + 20, 0, contentBox-&gt;getTopY() +
        contentBox-&gt;getHeight() - 50, 0x60ff0000, 0x60ffffff));

    // Adjust the plot area size, such that the bounding box (inclusive of axes) is 15 pixels from
    // the left depressed edge, 25 pixels below the top depressed edge, 25 pixels from the right
    // depressed edge, and 15 pixels above the bottom depressed edge.
    c-&gt;packPlotArea(contentBox-&gt;getLeftX() + 15, contentBox-&gt;getTopY() + 25, contentBox-&gt;getLeftX()
         + contentBox-&gt;getWidth() - 25, contentBox-&gt;getTopY() + contentBox-&gt;getHeight() - 15);

    // Add a custom CDML text with the bottom right corner is anchored to the bootom right corner of
    // the plot area, with 5 pixels margin.
    c-&gt;addText(plotArea-&gt;getLeftX() + plotArea-&gt;getWidth() - 5, plotArea-&gt;getTopY() +
        plotArea-&gt;getHeight() - 5,
        "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;"
        "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;")-&gt;setAlignment(
        Chart::BottomRight);

    // Output the chart
    c-&gt;makeChart("enhancedarea.jpg");

    //free up resources
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
