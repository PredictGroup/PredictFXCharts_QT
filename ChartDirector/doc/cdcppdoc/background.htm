<HTML>
<HEAD>
<Title>Background and Wallpaper</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Background and Wallpaper</p>
<hr class="separator">
<div class="content">
<img src="images/background0.png">&nbsp;&nbsp;<img src="images/background1.png">&nbsp;&nbsp;<img src="images/background2.png">&nbsp;&nbsp;<img src="images/background3.png">
<br><br>
This example demonstrates some of the background effects supported by ChartDirector.<br><br>
ChartDirector supports using an image file as the wallpaper of the chart image background with <a href="BaseChart.setWallpaper.htm">BaseChart.setWallpaper</a>, and as the plot area background with <a href="PlotArea.setBackground2.htm">PlotArea.setBackground2</a>.<br><br>
In addition to wallpapers, ChartDirector supports alternating plot area background colors using <a href="PlotArea.setBackground.htm">PlotArea.setBackground</a> and <a href="PlotArea.setAltBgColor.htm">PlotArea.setAltBgColor</a>.<br><br>
You can switch the default colors to using a dark background with white lines and text in one step by changing the color palette to a <a href="Chart.whiteOnBlackPalette.htm">whiteOnBlackPalette</a> using <a href="BaseChart.setColors.htm">BaseChart.setColors</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/background". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

void createChart(int chartIndex, const char *filename)
{
    // The data for the chart
    double data[] = {85, 156, 179.5, 211, 123};
    const char *labels[] = {"Mon", "Tue", "Wed", "Thu", "Fri"};

    // Create a XYChart object of size 270 x 270 pixels
    XYChart *c = new XYChart(270, 270);

    // Set the plot area at (40, 32) and of size 200 x 200 pixels
    PlotArea *plotarea = c-&gt;setPlotArea(40, 32, 200, 200);

    // Set the background style based on the input parameter
    if (chartIndex == 0) {
        // Has wallpaper image
        c-&gt;setWallpaper("tile.gif");
    } else if (chartIndex == 1) {
        // Use a background image as the plot area background
        plotarea-&gt;setBackground("bg.png");
    } else if (chartIndex == 2) {
        // Use white (0xffffff) and grey (0xe0e0e0) as two alternate plotarea background colors
        plotarea-&gt;setBackground(0xffffff, 0xe0e0e0);
    } else {
        // Use a dark background palette
        c-&gt;setColors(Chart::whiteOnBlackPalette);
    }

    // Set the labels on the x axis
    c-&gt;xAxis()-&gt;setLabels(StringArray(labels, (int)(sizeof(labels) / sizeof(labels[0]))));

    // Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
    c-&gt;addBarLayer(DoubleArray(data, (int)(sizeof(data) / sizeof(data[0]))), IntArray(0, 0)
        )-&gt;setBorderColor(-1, 1);

    // Output the chart
    c-&gt;makeChart(filename);

    //free up resources
    delete c;
}

int main(int argc, char *argv[])
{
    createChart(0, "background0.png");
    createChart(1, "background1.png");
    createChart(2, "background2.png");
    createChart(3, "background3.png");
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
