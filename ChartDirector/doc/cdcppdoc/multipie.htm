<HTML>
<HEAD>
<Title>Multi-Pie Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Multi-Pie Chart</p>
<hr class="separator">
<div class="content">
<img src="images/multipie0.png">&nbsp;&nbsp;<img src="images/multipie1.png">&nbsp;&nbsp;<img src="images/multipie2.png">
<br><br>
This example demonstrates drawing multiple pies with different data and colors. It also demonstrates putting labels on the sectors and using sector borders.<br><br>
<ul><li> The sectors colors are specified using <a href="BaseChart.setColors2.htm">BaseChart.setColors2</a>.<br><br>
<li> The sectors all have white borders set using <a href="PieChart.setLineColor.htm">PieChart.setLineColor</a>. The borders around the perimeters are invisible as they are the same color as the background. The sector borders internal to the pies become the separating lines among sectors.<br><br>
<li> The sector labels are configured with a pale yellow background and black border. This is by getting the <a href="TextBox.htm">TextBox</a> object representing the sector label prototype using <a href="PieChart.setLabelStyle.htm">PieChart.setLabelStyle</a>, and then call its <a href="Box.setBackground.htm">Box.setBackground</a> method.<br><br>
<li> The sector labels are moved inside the pie by using <a href="PieChart.setLabelLayout.htm">PieChart.setLabelLayout</a> with a negative label position.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/multipie". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

void createChart(int chartIndex, const char *filename)
{
    // The data for the pie chart
    double data0[] = {25, 18, 15};
    double data1[] = {14, 32, 24};
    double data2[] = {25, 23, 9};

    // The labels for the pie chart
    const char *labels[] = {"Software", "Hardware", "Services"};

    // Create a PieChart object of size 180 x 160 pixels
    PieChart *c = new PieChart(180, 160);

    // Set the center of the pie at (90, 80) and the radius to 60 pixels
    c-&gt;setPieSize(90, 80, 60);

    // Set the border color of the sectors to white (ffffff)
    c-&gt;setLineColor(0xffffff);

    // Set the background color of the sector label to pale yellow (ffffc0) with a black border
    // (000000)
    c-&gt;setLabelStyle()-&gt;setBackground(0xffffc0, 0x000000);

    // Set the label to be slightly inside the perimeter of the circle
    c-&gt;setLabelLayout(Chart::CircleLayout, -10);

    // Set the title, data and colors according to which pie to draw
    if (chartIndex == 0) {
        c-&gt;addTitle("Alpha Division", "arialbd.ttf", 8);
        c-&gt;setData(DoubleArray(data0, (int)(sizeof(data0) / sizeof(data0[0]))), StringArray(labels,
            (int)(sizeof(labels) / sizeof(labels[0]))));
        int pattern1[] = {0xff3333, 0xff9999, 0xffcccc};
        c-&gt;setColors(Chart::DataColor, IntArray(pattern1, (int)(sizeof(pattern1) / sizeof(pattern1[0
            ]))));
    } else if (chartIndex == 1) {
        c-&gt;addTitle("Beta Division", "arialbd.ttf", 8);
        c-&gt;setData(DoubleArray(data1, (int)(sizeof(data1) / sizeof(data1[0]))), StringArray(labels,
            (int)(sizeof(labels) / sizeof(labels[0]))));
        int pattern2[] = {0x33ff33, 0x99ff99, 0xccffcc};
        c-&gt;setColors(Chart::DataColor, IntArray(pattern2, (int)(sizeof(pattern2) / sizeof(pattern2[0
            ]))));
    } else {
        c-&gt;addTitle("Gamma Division", "arialbd.ttf", 8);
        c-&gt;setData(DoubleArray(data2, (int)(sizeof(data2) / sizeof(data2[0]))), StringArray(labels,
            (int)(sizeof(labels) / sizeof(labels[0]))));
        int pattern3[] = {0x3333ff, 0x9999ff, 0xccccff};
        c-&gt;setColors(Chart::DataColor, IntArray(pattern3, (int)(sizeof(pattern3) / sizeof(pattern3[0
            ]))));
    }

    // Output the chart
    c-&gt;makeChart(filename);

    //free up resources
    delete c;
}

int main(int argc, char *argv[])
{
    createChart(0, "multipie0.png");
    createChart(1, "multipie1.png");
    createChart(2, "multipie2.png");
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
