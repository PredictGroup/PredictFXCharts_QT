<HTML>
<HEAD>
<Title>QChartViewer</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">QChartViewer</p>
<hr class="separator">
<div class="content">
QChartViewer is a QT widget that inherits from QLabel and from <a href="ViewPortManager.htm">ViewPortManager</a>. It is used in QT applications for displaying charts images and to handle mouse interactions.<br><br>
QChartViewer is released in source code format in the QT sample programs that comes with ChartDirector. The source code serves as an example on how one can display charts and handle mouse interactions in general GUI framework.
<br><br><b><span style="font-size:120%">Methods</span></b>
<table border="1" cellpadding="5" cellspacing="0" width="98%"> 
<tr>
<th width="19%%">Method</th><th width="19%%">Inherited</th><th width="60%%">Description</th>
</tr>
<tr>
<td><a href="QChartViewer.setChart.htm">setChart</a></td><td>(Self)</td><td>Sets a <a href="BaseChart.htm">BaseChart</a> object for display.</td></tr><tr><td><a href="QChartViewer.getChart.htm">getChart</a></td><td>(Self)</td><td>Gets the <a href="BaseChart.htm">BaseChart</a> pointer provided by the previous <a href="QChartViewer.setChart.htm">QChartViewer.setChart</a> method call.</td></tr><tr><td><a href="QChartViewer.setImageMap.htm">setImageMap</a></td><td>(Self)</td><td>Sets the image map that defines the hot spots on the chart image.</td></tr><tr><td><a href="QChartViewer.getImageMapHandler.htm">getImageMapHandler</a></td><td>(Self)</td><td>Gets the <a href="ImageMapHandler.htm">ImageMapHandler</a> object for the current image map.</td></tr><tr><td><a href="QChartViewer.setDefaultToolTip.htm">setDefaultToolTip</a></td><td>(Self)</td><td>Sets the default tool tip to use when the mouse is over the QChartViewer but not over any hot spot.</td></tr><tr><td><a href="QChartViewer.getChartMouseX.htm">getChartMouseX</a></td><td>(Self)</td><td>Gets the mouse  x-coordinate in the chart pixel coordinate system.</td></tr><tr><td><a href="QChartViewer.getChartMouseY.htm">getChartMouseY</a></td><td>(Self)</td><td>Gets the mouse  y-coordinate in the chart pixel coordinate system.</td></tr><tr><td><a href="QChartViewer.getPlotAreaMouseX.htm">getPlotAreaMouseX</a></td><td>(Self)</td><td>Gets the mouse  x-coordinate on the plot area in the chart pixel coordinate system.</td></tr><tr><td><a href="QChartViewer.getPlotAreaMouseY.htm">getPlotAreaMouseY</a></td><td>(Self)</td><td>Gets the mouse  y-coordinate on the plot area in the chart pixel coordinate system.</td></tr><tr><td><a href="QChartViewer.setPlotAreaMouseMargin.htm">setPlotAreaMouseMargin</a></td><td>(Self)</td><td>Sets all margins (left, right, top, and bottom) of the plot area mouse event region to the same value.</td></tr><tr><td><a href="QChartViewer.setPlotAreaMouseMargin2.htm">setPlotAreaMouseMargin2</a></td><td>(Self)</td><td>Sets the margins of the plot area mouse event region.</td></tr><tr><td><a href="QChartViewer.removeDynamicLayer.htm">removeDynamicLayer</a></td><td>(Self)</td><td>Calls <a href="BaseChart.removeDynamicLayer.htm">BaseChart.removeDynamicLayer</a> when the specified event occurs.</td></tr><tr><td><a href="QChartViewer.updateDisplay.htm">updateDisplay</a></td><td>(Self)</td><td>Updates the display.</td></tr><tr><td><a href="QChartViewer.setMouseUsage.htm">setMouseUsage</a></td><td>(Self)</td><td>Sets the mouse usage mode.</td></tr><tr><td><a href="QChartViewer.getMouseUsage.htm">getMouseUsage</a></td><td>(Self)</td><td>Gets the mouse usage mode.</td></tr><tr><td><a href="QChartViewer.setZoomDirection.htm">setZoomDirection</a></td><td>(Self)</td><td>Sets the zoom direction for mouse zoom in/out actions.</td></tr><tr><td><a href="QChartViewer.getZoomDirection.htm">getZoomDirection</a></td><td>(Self)</td><td>Gets the zoom direction for mouse zoom in/out actions.</td></tr><tr><td><a href="QChartViewer.setScrollDirection.htm">setScrollDirection</a></td><td>(Self)</td><td>Sets the scroll direction for mouse scroll actions.</td></tr><tr><td><a href="QChartViewer.getScrollDirection.htm">getScrollDirection</a></td><td>(Self)</td><td>Gets the scroll direction for mouse scroll actions.</td></tr><tr><td><a href="QChartViewer.setZoomInRatio.htm">setZoomInRatio</a></td><td>(Self)</td><td>Sets the magnification ratio for each zoom in click of the mouse.</td></tr><tr><td><a href="QChartViewer.getZoomInRatio.htm">getZoomInRatio</a></td><td>(Self)</td><td>Gets the magnification ratio for each zoom in click of the mouse.</td></tr><tr><td><a href="QChartViewer.setZoomOutRatio.htm">setZoomOutRatio</a></td><td>(Self)</td><td>Sets the magnification ratio for each zoom out click of the mouse.</td></tr><tr><td><a href="QChartViewer.getZoomOutRatio.htm">getZoomOutRatio</a></td><td>(Self)</td><td>Gets the magnification ratio for each zoom out click of the mouse.</td></tr><tr><td><a href="QChartViewer.setMouseWheelZoomRatio.htm">setMouseWheelZoomRatio</a></td><td>(Self)</td><td>Sets the magnification ratio for each mouse wheel event.</td></tr><tr><td><a href="QChartViewer.getMouseWheelZoomRatio.htm">getMouseWheelZoomRatio</a></td><td>(Self)</td><td>Gets the magnification ratio for each mouse wheel event.</td></tr><tr><td><a href="QChartViewer.setSelectionBorderWidth.htm">setSelectionBorderWidth</a></td><td>(Self)</td><td>Sets the border width of the zoom selection box.</td></tr><tr><td><a href="QChartViewer.getSelectionBorderWidth.htm">getSelectionBorderWidth</a></td><td>(Self)</td><td>Gets the border width of the zoom selection box.</td></tr><tr><td><a href="QChartViewer.setSelectionBorderColor.htm">setSelectionBorderColor</a></td><td>(Self)</td><td>Sets the border color of the zoom selection box as a QColor value.</td></tr><tr><td><a href="QChartViewer.getSelectionBorderColor.htm">getSelectionBorderColor</a></td><td>(Self)</td><td>Gets the border color of the zoom selection box.</td></tr><tr><td><a href="QChartViewer.setMinimumDrag.htm">setMinimumDrag</a></td><td>(Self)</td><td>Sets the minimum mouse drag distance before it is considered as an intentional drag.</td></tr><tr><td><a href="QChartViewer.getMinimumDrag.htm">getMinimumDrag</a></td><td>(Self)</td><td>Gets the minimum mouse drag distance before it is considered as an intentional drag.</td></tr><tr><td><a href="QChartViewer.setUpdateInterval.htm">setUpdateInterval</a></td><td>(Self)</td><td>Sets the minimum gap interval between two viewPortChanged signals in milliseconds.</td></tr><tr><td><a href="QChartViewer.getUpdateInterval.htm">getUpdateInterval</a></td><td>(Self)</td><td>Gets the minimum gap interval between two viewPortChanged signals in milliseconds.</td></tr><tr><td><a href="QChartViewer.updateViewPort.htm">updateViewPort</a></td><td>(Self)</td><td>Triggers the viewPortChanged signal.</td></tr><tr><td><a href="QChartViewer.needUpdateChart.htm">needUpdateChart</a></td><td>(Self)</td><td>Determines if the current viewPortChanged signal requires  chart update.</td></tr><tr><td><a href="QChartViewer.needUpdateImageMap.htm">needUpdateImageMap</a></td><td>(Self)</td><td>Determines if the current viewPortChanged signal requires  image map update.</td></tr><tr><td><a href="QChartViewer.isMouseOnPlotArea.htm">isMouseOnPlotArea</a></td><td>(Self)</td><td>Checks if the mouse cursor is on the extended plot area.</td></tr><tr><td><a href="QChartViewer.isMouseDragging.htm">isMouseDragging</a></td><td>(Self)</td><td>Checks if the mouse is dragging on the plot area.</td></tr><tr><td><a href="QChartViewer.isInMouseMoveEvent.htm">isInMouseMoveEvent</a></td><td>(Self)</td><td>Checks if the current code is executing in a MouseMoveChart or MouseMovePlotArea event.</td></tr><tr><td><a href="QChartViewer.isInViewPortChangedEvent.htm">isInViewPortChangedEvent</a></td><td>(Self)</td><td>Checks if the current code is executing in a ViewPortChanged event.</td></tr><tr><td><a href="ViewPortManager.setChartMetrics.htm">setChartMetrics</a></td><td>ViewPortManager</td><td>Sets the chart metrics to the ViewPortManager so it knows the positions of the necessary chart objects for supporting viewports.</td></tr><tr><td><a href="ViewPortManager.getPlotAreaLeft.htm">getPlotAreaLeft</a></td><td>ViewPortManager</td><td>Gets the x-coordinate of the left side of the plot area in pixels.</td></tr><tr><td><a href="ViewPortManager.getPlotAreaTop.htm">getPlotAreaTop</a></td><td>ViewPortManager</td><td>Gets the y-coordinate of the top side of the plot area in pixels.</td></tr><tr><td><a href="ViewPortManager.getPlotAreaWidth.htm">getPlotAreaWidth</a></td><td>ViewPortManager</td><td>Gets the width of the plot area in pixels.</td></tr><tr><td><a href="ViewPortManager.getPlotAreaHeight.htm">getPlotAreaHeight</a></td><td>ViewPortManager</td><td>Gets the height of the plot area in pixels.</td></tr><tr><td><a href="ViewPortManager.inPlotArea.htm">inPlotArea</a></td><td>ViewPortManager</td><td>Determines if a given point is within the plot area.</td></tr><tr><td><a href="ViewPortManager.setViewPortLeft.htm">setViewPortLeft</a></td><td>ViewPortManager</td><td>Sets the position of the left side of the viewport.</td></tr><tr><td><a href="ViewPortManager.getViewPortLeft.htm">getViewPortLeft</a></td><td>ViewPortManager</td><td>Gets the position of the left side of the viewport.</td></tr><tr><td><a href="ViewPortManager.setViewPortTop.htm">setViewPortTop</a></td><td>ViewPortManager</td><td>Sets the position of the top side of the viewport.</td></tr><tr><td><a href="ViewPortManager.getViewPortTop.htm">getViewPortTop</a></td><td>ViewPortManager</td><td>Gets the position of the top side of the viewport.</td></tr><tr><td><a href="ViewPortManager.setViewPortWidth.htm">setViewPortWidth</a></td><td>ViewPortManager</td><td>Sets the width of the viewport.</td></tr><tr><td><a href="ViewPortManager.getViewPortWidth.htm">getViewPortWidth</a></td><td>ViewPortManager</td><td>Gets the width of the viewport.</td></tr><tr><td><a href="ViewPortManager.setViewPortHeight.htm">setViewPortHeight</a></td><td>ViewPortManager</td><td>Sets the height of the viewport.</td></tr><tr><td><a href="ViewPortManager.getViewPortHeight.htm">getViewPortHeight</a></td><td>ViewPortManager</td><td>Gets the height of the viewport.</td></tr><tr><td><a href="ViewPortManager.validateViewPort.htm">validateViewPort</a></td><td>ViewPortManager</td><td>Ensures the viewport left, top, width and height are within valid ranges and adjusts them if necessary.</td></tr><tr><td><a href="ViewPortManager.setZoomInWidthLimit.htm">setZoomInWidthLimit</a></td><td>ViewPortManager</td><td>Sets the viewport width at maximum zoom in.</td></tr><tr><td><a href="ViewPortManager.getZoomInWidthLimit.htm">getZoomInWidthLimit</a></td><td>ViewPortManager</td><td>Gets the viewport width at maximum zoom in for mouse zoom in actions.</td></tr><tr><td><a href="ViewPortManager.setZoomOutWidthLimit.htm">setZoomOutWidthLimit</a></td><td>ViewPortManager</td><td>Sets the viewport width at maximum zoom out.</td></tr><tr><td><a href="ViewPortManager.getZoomOutWidthLimit.htm">getZoomOutWidthLimit</a></td><td>ViewPortManager</td><td>Gets the viewport width at maximum zoom out for mouse zoom out actions.</td></tr><tr><td><a href="ViewPortManager.setZoomInHeightLimit.htm">setZoomInHeightLimit</a></td><td>ViewPortManager</td><td>Sets the viewport height at maximum zoom in.</td></tr><tr><td><a href="ViewPortManager.getZoomInHeightLimit.htm">getZoomInHeightLimit</a></td><td>ViewPortManager</td><td>Gets the viewport height at maximum zoom in for mouse zoom in actions.</td></tr><tr><td><a href="ViewPortManager.setZoomOutHeightLimit.htm">setZoomOutHeightLimit</a></td><td>ViewPortManager</td><td>Sets the viewport height at maximum zoom out.</td></tr><tr><td><a href="ViewPortManager.getZoomOutHeightLimit.htm">getZoomOutHeightLimit</a></td><td>ViewPortManager</td><td>Gets the viewport height at maximum zoom out for mouse zoom out actions.</td></tr><tr><td><a href="ViewPortManager.canZoomIn.htm">canZoomIn</a></td><td>ViewPortManager</td><td>Checks if it is possible to zoom in further at a certain direction without violating zoom in limits.</td></tr><tr><td><a href="ViewPortManager.canZoomOut.htm">canZoomOut</a></td><td>ViewPortManager</td><td>Checks if it is possible to zoom out further at a certain direction without violating zoom out limits.</td></tr><tr><td><a href="ViewPortManager.zoomAt.htm">zoomAt</a></td><td>ViewPortManager</td><td>Zooms at a certain point.</td></tr><tr><td><a href="ViewPortManager.zoomAround.htm">zoomAround</a></td><td>ViewPortManager</td><td>Zooms around a certain point.</td></tr><tr><td><a href="ViewPortManager.zoomTo.htm">zoomTo</a></td><td>ViewPortManager</td><td>Zooms to the selected rectangular region.</td></tr><tr><td><a href="ViewPortManager.startDrag.htm">startDrag</a></td><td>ViewPortManager</td><td>Takes a snapshot of the viewport to prepare for dragging. This method must be called before calling <a href="ViewPortManager.dragTo.htm">ViewPortManager.dragTo</a>.</td></tr><tr><td><a href="ViewPortManager.dragTo.htm">dragTo</a></td><td>ViewPortManager</td><td>Scrolls the viewport to reflect dragging of the underlying rectangular surface.</td></tr><tr><td><a href="ViewPortManager.setFullRange.htm">setFullRange</a></td><td>ViewPortManager</td><td>Defines the full range of a viewport data scale.</td></tr><tr><td><a href="ViewPortManager.updateFullRangeH.htm">updateFullRangeH</a></td><td>ViewPortManager</td><td>Updates the full range of a horizontal viewport data scale.</td></tr><tr><td><a href="ViewPortManager.updateFullRangeV.htm">updateFullRangeV</a></td><td>ViewPortManager</td><td>Updates the full range of a vertical viewport data scale.</td></tr><tr><td><a href="ViewPortManager.getValueAtViewPort.htm">getValueAtViewPort</a></td><td>ViewPortManager</td><td>Converts a viewport coordinate to a value of the specified data scale.</td></tr><tr><td><a href="ViewPortManager.getViewPortAtValue.htm">getViewPortAtValue</a></td><td>ViewPortManager</td><td>Converts a value of the specified data scale to a viewport coordinate.</td></tr><tr><td><a href="ViewPortManager.syncLinearAxisWithViewPort.htm">syncLinearAxisWithViewPort</a></td><td>ViewPortManager</td><td>Synchronizes a linear <a href="Axis.htm">Axis</a> with the part of the data scale in viewport.</td></tr><tr><td><a href="ViewPortManager.syncLogAxisWithViewPort.htm">syncLogAxisWithViewPort</a></td><td>ViewPortManager</td><td>Synchronizes a logarithmic <a href="Axis.htm">Axis</a> with the part of the data scale in viewport.</td></tr><tr><td><a href="ViewPortManager.syncDateAxisWithViewPort.htm">syncDateAxisWithViewPort</a></td><td>ViewPortManager</td><td>Synchronizes a date/time <a href="Axis.htm">Axis</a> with the part of the data scale in viewport.</td></tr><tr><td colspan="3" bgColor="#cccccc">Note: Methods inherited from QLabel are omitted.</td></tr>
</tr>
</table><br><b><span style="font-size:120%">Signals</span></b>
<table border="1" cellpadding="5" cellspacing="0" width="98%"> 
<tr>
<th width="19%%">Method</th><th width="19%%">Inherited</th><th width="60%%">Description</th>
</tr>
<tr>
<td><a href="QChartViewer.clicked.htm">clicked</a></td><td>(Self)</td><td>This signal will be emitted when the mouse clicks on the QChartViewer widget.</td></tr><tr><td><a href="QChartViewer.mouseMove.htm">mouseMove</a></td><td>(Self)</td><td>This signal will be emitted when the mouse moves over the QChartViewer widget.</td></tr><tr><td><a href="QChartViewer.mouseWheel.htm">mouseWheel</a></td><td>(Self)</td><td>This signal will be emitted when the mouse is over the QChartViewer widget and the mouse wheel is rotated.</td></tr><tr><td><a href="QChartViewer.mouseMoveChart.htm">mouseMoveChart</a></td><td>(Self)</td><td>This signal will be emitted when the mouse moves over the QChartViewer widget. Unlike the mouseMove signal, QChartViewer may delay a mouseMoveChart signal and combine multiple signals into one signal to improve GUI responsiveness.</td></tr><tr><td><a href="QChartViewer.mouseLeaveChart.htm">mouseLeaveChart</a></td><td>(Self)</td><td>This signal will be emitted when the mouse leaves the QChartViewer widget.</td></tr><tr><td><a href="QChartViewer.mouseMovePlotArea.htm">mouseMovePlotArea</a></td><td>(Self)</td><td>This signal will be emitted when the mouse moves over the extended plot area.</td></tr><tr><td><a href="QChartViewer.mouseLeavePlotArea.htm">mouseLeavePlotArea</a></td><td>(Self)</td><td>This signal will be emitted when the mouse leaves the extended plot area.</td></tr><tr><td><a href="QChartViewer.viewPortChanged.htm">viewPortChanged</a></td><td>(Self)</td><td>This signal will be emitted when the viewport is changed through mouse actions, or when <a href="QChartViewer.updateViewPort.htm">QChartViewer.updateViewPort</a> is called.</td></tr><tr></tr><tr><td colspan="3" bgColor="#cccccc">Note: Signals inherited from QLabel are omitted.</td></tr>
</tr>
</table>
</div>
<hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
