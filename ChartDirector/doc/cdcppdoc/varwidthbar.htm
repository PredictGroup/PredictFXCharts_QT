<HTML>
<HEAD>
<Title>Variable Width Bar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Variable Width Bar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/varwidthbar.png">
<br><br>
This example demonstrates a bar chart with variable bar widths.<br><br>
ChartDirector does not really have a bar layer for variable width bars. However, an area layer can be used to create the same effect.<br><br>
The variable width bars in this example are actually 4 areas, created by 4 area layers. The data set for each area layer consists of 4 points for the 4 corners of a bar.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/varwidthbar". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

int main(int argc, char *argv[])
{
    // The data for the chart
    double data[] = {800, 600, 1000, 1400};
    double widths[] = {250, 500, 960, 460};
    const char *labels[] = {"Wind", "Hydro", "Coal", "Natural Gas"};

    // The colors to use
    int colors[] = {0x00aa00, 0x66aaee, 0xee6622, 0xffbb00};

    // Create a XYChart object of size 500 x 350 pixels
    XYChart *c = new XYChart(500, 350);

    // Add a title to the chart using 15pt Arial Italic font
    c-&gt;addTitle("Energy Generation Breakdown", "ariali.ttf", 15);

    // Set the plotarea at (60, 60) and of (chart_width - 90) x (chart_height - 100) in size. Use a
    // vertical gradient color from light blue (f9f9ff) to sky blue (aaccff) as background. Set grid
    // lines to white (ffffff).
    int plotAreaBgColor = c-&gt;linearGradientColor(0, 60, 0, c-&gt;getHeight() - 40, 0xaaccff, 0xf9fcff);
    c-&gt;setPlotArea(60, 60, c-&gt;getWidth() - 90, c-&gt;getHeight() - 100, plotAreaBgColor, -1, -1,
        0xffffff);

    // Add a legend box at (50, 30) using horizontal layout and transparent background.
    c-&gt;addLegend(55, 30, false)-&gt;setBackground(Chart::Transparent);

    // Add titles to x/y axes with 10 points Arial Bold font
    c-&gt;xAxis()-&gt;setTitle("Mega Watts", "arialbd.ttf", 10);
    c-&gt;yAxis()-&gt;setTitle("Cost per MWh (dollars)", "arialbd.ttf", 10);

    // Set the x axis rounding to false, so that the x-axis will fit the data exactly
    c-&gt;xAxis()-&gt;setRounding(false, false);

    // In ChartDirector, there is no bar layer that can have variable bar widths, but you may create
    // a bar using an area layer. (A bar can be considered as the area under a rectangular outline.)
    // So by using a loop to create one bar per area layer, we can achieve a variable width bar
    // chart.

    // starting position of current bar
    double currentX = 0;

    for(int i = 0; i &lt; (int)(sizeof(data) / sizeof(data[0])); ++i) {
        // ending position of current bar
        double nextX = currentX + widths[i];

        // outline of the bar
        double dataX[] = {currentX, currentX, nextX, nextX};
        double dataY[] = {0, data[i], data[i], 0};

        // create the area layer to fill the bar
        AreaLayer *layer = c-&gt;addAreaLayer(DoubleArray(dataY, (int)(sizeof(dataY) / sizeof(dataY[0])
            )), colors[i], labels[i]);
        layer-&gt;setXData(DoubleArray(dataX, (int)(sizeof(dataX) / sizeof(dataX[0]))));

        // the ending position becomes the starting position of the next bar
        currentX = nextX;
    }

    // Output the chart
    c-&gt;makeChart("varwidthbar.png");

    //free up resources
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
