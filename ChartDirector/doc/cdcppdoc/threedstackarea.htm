<HTML>
<HEAD>
<Title>3D Stacked Area Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">3D Stacked Area Chart</p>
<hr class="separator">
<div class="content">
<img src="images/threedstackarea.png">
<br><br>
This example demonstrates creating a stacked area chart with 3D effects.<br><br>
The key features demonstrated in this example are:<br><br>
<ul><li> Add a stacked area layer using <a href="XYChart.addAreaLayer2.htm">XYChart.addAreaLayer2</a> with the <a href="Chart.Stack.htm">Stack</a> predefined constant.<br><br>
<li> Add multiple data sets to the area layer using <a href="Layer.addDataSet.htm">Layer.addDataSet</a>.<br><br>
<li> Add a legend to the chart using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a><br><br>
<li> Add a title to the y-axis using <a href="Axis.setTitle.htm">Axis.setTitle</a>, and draw the title upright (instead of rotated 90 degrees) using <a href="TextBox.setFontAngle.htm">TextBox.setFontAngle</a>. Note that the title can contain multiple lines using line break characters.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/threedstackarea". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

int main(int argc, char *argv[])
{
    // The data for the area chart
    double data0[] = {42, 49, 33, 38, 51, 46, 29, 41, 44, 57, 59, 52, 37, 34, 51, 56, 56, 60, 70,
        76, 63, 67, 75, 64, 51};
    double data1[] = {50, 45, 47, 34, 42, 49, 63, 62, 73, 59, 56, 50, 64, 60, 67, 67, 58, 59, 73,
        77, 84, 82, 80, 84, 89};
    double data2[] = {61, 79, 85, 66, 53, 39, 24, 21, 37, 56, 37, 22, 21, 33, 13, 17, 4, 23, 16, 25,
        9, 10, 5, 7, 16};
    const char *labels[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
        "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"};

    // Create a XYChart object of size 500 x 300 pixels
    XYChart *c = new XYChart(500, 300);

    // Set the plotarea at (90, 30) and of size 300 x 240 pixels.
    c-&gt;setPlotArea(90, 30, 300, 240);

    // Add a legend box at (405, 100)
    c-&gt;addLegend(405, 100);

    // Add a title to the chart
    c-&gt;addTitle("Daily System Load");

    // Add a title to the y axis. Draw the title upright (font angle = 0)
    c-&gt;yAxis()-&gt;setTitle("Database\nQueries\n(per sec)")-&gt;setFontAngle(0);

    // Set the labels on the x axis.
    c-&gt;xAxis()-&gt;setLabels(StringArray(labels, (int)(sizeof(labels) / sizeof(labels[0]))));

    // Display 1 out of 2 labels on the x-axis. Show minor ticks for remaining labels.
    c-&gt;xAxis()-&gt;setLabelStep(2, 1);

    // Add an area layer
    AreaLayer *layer = c-&gt;addAreaLayer();

    // Draw the area layer in 3D
    layer-&gt;set3D();

    // Add the three data sets to the area layer
    layer-&gt;addDataSet(DoubleArray(data0, (int)(sizeof(data0) / sizeof(data0[0]))), -1, "Server # 1")
        ;
    layer-&gt;addDataSet(DoubleArray(data1, (int)(sizeof(data1) / sizeof(data1[0]))), -1, "Server # 2")
        ;
    layer-&gt;addDataSet(DoubleArray(data2, (int)(sizeof(data2) / sizeof(data2[0]))), -1, "Server # 3")
        ;

    // Output the chart
    c-&gt;makeChart("threedstackarea.png");

    //free up resources
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
