<HTML>
<HEAD>
<Title>Y Zone Coloring</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Y Zone Coloring</p>
<hr class="separator">
<div class="content">
<img src="images/yzonecolor.png">
<br><br>
This example demonstrates using y zone colors - colors that change at certain y value thresholds.<br><br>
In this example, a y zone color is used as the fill color of an area layer, so that the area fill color changes above a certain threshold.<br><br>
Y zone colors are created using <a href="Layer.yZoneColor.htm">Layer.yZoneColor</a>. You can use a y zone color in any ChartDirector API that expects a color. For instance, you can use a y zone color as background color, fill color of data sets, line color, etc.<br><br>
A single y zone color can support one threshold value and change between two colors. The two colors can be any colors, including another y zone color. You may create y zone colors with multiple thresholds by cascading multiple y zone colors this way.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/yzonecolor". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

int main(int argc, char *argv[])
{
    // The data for the chart
    double data[] = {30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60, 55, 53, 35, 50, 66,
        56, 48, 52, 65, 62};

    // The labels for the chart
    const char *labels[] = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12",
        "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"};

    // Create a XYChart object of size 500 x 300 pixels, with a pale yellow (0xffffc0) background, a
    // black border, and 1 pixel 3D border effect
    XYChart *c = new XYChart(500, 300, 0xffffc0, 0x000000, 1);

    // Set the plotarea at (55, 50) and of size 420 x 205 pixels, with white background. Turn on
    // both horizontal and vertical grid lines with light grey color (0xc0c0c0)
    c-&gt;setPlotArea(55, 50, 420, 205, 0xffffff)-&gt;setGridColor(0xc0c0c0, 0xc0c0c0);

    // Add a legend box at (55, 25) (top of the chart) with horizontal layout. Use 8pt Arial font.
    // Set the background and border color to Transparent.
    LegendBox *legendBox = c-&gt;addLegend(55, 25, false, "", 8);
    legendBox-&gt;setBackground(Chart::Transparent);

    // Add keys to the legend box to explain the color zones
    legendBox-&gt;addKey("Normal Zone", 0x8033ff33);
    legendBox-&gt;addKey("Alert Zone", 0x80ff3333);

    // Add a title box to the chart using 13pt Arial Bold Italic font. The title is in CDML and
    // includes embedded images for highlight. The text is white (0xffffff) on a black background,
    // with a 1 pixel 3D border.
    c-&gt;addTitle(
        "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Y Zone Color Demo "
        "&lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "arialbi.ttf", 13, 0xffffff)-&gt;setBackground(
        0x000000, -1, 1);

    // Add a title to the y axis
    c-&gt;yAxis()-&gt;setTitle("Energy Concentration (KJ per liter)");

    // Set the labels on the x axis.
    c-&gt;xAxis()-&gt;setLabels(StringArray(labels, (int)(sizeof(labels) / sizeof(labels[0]))));

    // Display 1 out of 3 labels on the x-axis.
    c-&gt;xAxis()-&gt;setLabelStep(3);

    // Add a title to the x axis using CDML
    c-&gt;xAxis()-&gt;setTitle("&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;");

    // Set the axes width to 2 pixels
    c-&gt;xAxis()-&gt;setWidth(2);
    c-&gt;yAxis()-&gt;setWidth(2);

    // Add an area layer to the chart. The area is using a y zone color, where the color is
    // semi-transparent green below 60, and semi-transparent red above 60.
    c-&gt;addAreaLayer(DoubleArray(data, (int)(sizeof(data) / sizeof(data[0]))), c-&gt;yZoneColor(60,
        0x8033ff33, 0x80ff3333));

    // Add a custom CDML text at the bottom right of the plot area as the logo
    c-&gt;addText(475, 255,
        "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;"
        "&lt;*font=timesbi.ttf,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;")-&gt;setAlignment(
        Chart::BottomRight);

    // Output the chart
    c-&gt;makeChart("yzonecolor.png");

    //free up resources
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
