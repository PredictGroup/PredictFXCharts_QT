<HTML>
<HEAD>
<Title>Contour Color Legend</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">Contour Color Legend</p>
<hr class="separator">
<div class="content">
<img src="images/contourlegend.png">
<br><br>
This example demonstrates using a legend box to display the color legend, which is useful for irregularly spaced color scale or for long color labels.<br><br>
Many of the examples in the documentation uses <a href="ColorAxis.htm">ColorAxis</a> to both define and display the color scale. This is useful for evenly spaced contours, which are associated with the ticks and labels on the color axis. If the contours are highly uneven (such as at 0, 1, 2, 50, 195, 200), the labels are also unevenly spaced on the color axis, and some labels may become so close together that they overlap.<br><br>
This example demonstrates an alternative method of using a <a href="LegendBox.htm">LegendBox</a> to display color legends. The color axis still defines the color scale, but it is not displayed
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/contourlegend". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

int main(int argc, char *argv[])
{
    // The x and y coordinates of the grid
    double dataX[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    double dataY[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};

    // Use random numbers for the z values on the XY grid
    RanSeries *r = new RanSeries(999);
    DoubleArray dataZ = r-&gt;get2DSeries((int)(sizeof(dataX) / sizeof(dataX[0])), (int)(sizeof(dataY)
         / sizeof(dataY[0])), -0.9, 1.15);

    // Create a XYChart object of size 640 x 460 pixels
    XYChart *c = new XYChart(640, 460);

    // Set the plotarea at (30, 25) and of size 400 x 400 pixels. Use semi-transparent grey
    // (0xdd000000) horizontal and vertical grid lines
    c-&gt;setPlotArea(50, 25, 400, 400, -1, -1, Chart::Transparent, 0xdd000000, -1);

    // Set the x and y axis stems to transparent and the label font to 12pt Arial
    c-&gt;xAxis()-&gt;setColors(Chart::Transparent);
    c-&gt;yAxis()-&gt;setColors(Chart::Transparent);
    c-&gt;xAxis()-&gt;setLabelStyle("arial.ttf", 12);
    c-&gt;yAxis()-&gt;setLabelStyle("arial.ttf", 12);

    // Set the x-axis and y-axis scale
    c-&gt;xAxis()-&gt;setLinearScale(0, 10, 1);
    c-&gt;yAxis()-&gt;setLinearScale(0, 10, 1);

    // Add a contour layer using the given data
    ContourLayer *layer = c-&gt;addContourLayer(DoubleArray(dataX, (int)(sizeof(dataX) / sizeof(dataX[0
        ]))), DoubleArray(dataY, (int)(sizeof(dataY) / sizeof(dataY[0]))), dataZ);

    // Move the grid lines in front of the contour layer
    c-&gt;getPlotArea()-&gt;moveGridBefore(layer);

    // Define the color scale
    double colorScale[] = {-0.8, 0x0066ff, -0.5, 0x66ccff, -0.3, 0x66ffff, 0, 0x88ff88, 0.4,
        0x00ff00, 0.7, 0xffff00, 0.9, 0xff6600, 1.0, 0xcc0000, 1.1};
    // Apply the color scale, and specify the underflow and overflow colors for regions exceeding
    // the color scale
    layer-&gt;colorAxis()-&gt;setColorScale(DoubleArray(colorScale, (int)(sizeof(colorScale) / sizeof(
        colorScale[0]))), 0x0000cc, 0x000000);

    //
    // Instead of displaying the color axis, we use a legend box to display the colors. This is
    // useful for colors that are unevenly spaced on the color axis.
    //

    // Add a legend box at (460, 25) with vertical layout, with 12pt Arial font, transparent
    // background and border, icon size of 15 x 15 pixels, and line spacing of 8 pixels.
    LegendBox *b = c-&gt;addLegend(460, 25, true, "arial.ttf", 12);
    b-&gt;setBackground(Chart::Transparent, Chart::Transparent);
    b-&gt;setKeySize(15, 15);
    b-&gt;setKeySpacing(0, 8);

    // Add the legend box entries
    b-&gt;addKey("&gt; 1.1 (Critical)", 0x000000);
    b-&gt;addKey("1.0 to 1.1 (Alert)", 0xcc0000);
    b-&gt;addKey("0.9 to 1.0", 0xff6600);
    b-&gt;addKey("0.7 to 0.9", 0xffff00);
    b-&gt;addKey("0.4 to 0.7", 0x00ff00);
    b-&gt;addKey("0.0 to 0.4", 0x88ff88);
    b-&gt;addKey("-0.3 to 0.0", 0x66ffff);
    b-&gt;addKey("-0.5 to -0.3", 0x66ccff);
    b-&gt;addKey("-0.8 to -0.5", 0x0066ff);
    b-&gt;addKey("&lt; -0.8", 0x0000cc);

    // Output the chart
    c-&gt;makeChart("contourlegend.png");

    //free up resources
    delete r;
    delete c;
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
