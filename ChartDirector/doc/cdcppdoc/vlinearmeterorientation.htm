<HTML>
<HEAD>
<Title>V-Linear Meter Orientation</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (C++ Edition)</p>
<p class="heading1">V-Linear Meter Orientation</p>
<hr class="separator">
<div class="content">
<img src="images/vlinearmeterorientation0.png">&nbsp;&nbsp;<img src="images/vlinearmeterorientation1.png">
<br><br>
This example demonstration various orientations for vertical linear meters.<br><br>
In a vertical linear meter, the scale labels can be positioned on the left or right side of the meter scale. This is controlled by the last argument to <a href="LinearMeter.setMeter.htm">LinearMeter.setMeter</a>, which can be <a href="Chart.Left.htm">Left</a> or <a href="Chart.Right.htm">Right</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
[The following code is available in "cppdemo/vlinearmeterorientation". A MFC version of the code is available in "mfcdemo/mfcdemo" (Windows edition only). A QT version of the code is available in "qtdemo/qtdemo".]
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#include "chartdir.h"

void createChart(int chartIndex, const char *filename)
{
    // The value to display on the meter
    double value = 75.35;

    // Create a LinearMeter object of size 70 x 240 pixels with very light grey (0xeeeeee)
    // backgruond and a light grey (0xccccccc) 3-pixel thick rounded frame
    LinearMeter *m = new LinearMeter(70, 240, 0xeeeeee, 0xcccccc);
    m-&gt;setRoundedFrame(Chart::Transparent);
    m-&gt;setThickFrame(3);

    // This example demonstrates putting the text labels at the left or right side by setting the
    // label alignment and scale position.
    if (chartIndex == 0) {
        m-&gt;setMeter(28, 18, 20, 205, Chart::Left);
    } else {
        m-&gt;setMeter(20, 18, 20, 205, Chart::Right);
    }

    // Set meter scale from 0 - 100, with a tick every 10 units
    m-&gt;setScale(0, 100, 10);

    // Add a smooth color scale to the meter
    double smoothColorScale[] = {0, 0x6666ff, 25, 0x00bbbb, 50, 0x00ff00, 75, 0xffff00, 100,
        0xff0000};
    m-&gt;addColorScale(DoubleArray(smoothColorScale, (int)(sizeof(smoothColorScale) / sizeof(
        smoothColorScale[0]))));

    // Add a blue (0x0000cc) pointer at the specified value
    m-&gt;addPointer(value, 0x0000cc);

    // Output the chart
    m-&gt;makeChart(filename);

    //free up resources
    delete m;
}

int main(int argc, char *argv[])
{
    createChart(0, "vlinearmeterorientation0.png");
    createChart(1, "vlinearmeterorientation1.png");
    return 0;
}</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2015 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
